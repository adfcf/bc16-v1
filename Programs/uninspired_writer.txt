# NAME: uninspired_writer
# AUTHOR: adfcf
# DESCRIPTION: 
	# This program loads two numbers from the main memory.
	# The first one searched for at 0x0010 is expected to be a counting step;
	# The second one searched for at 0x011 is expected to be a upper bound for the counting.
	# The program proceeds to add the 'step' to the accumulator register until it becomes greater than the upper bound. 
	# Additionally, it is written each partial value of the accumulator at the main memory successively, from position 0x12 onwards.
	# When it finishes, it puts a numerical constant at the end of the writing.

LEGEND
- $r0: step.
- $r1: upper bound.
- $r2: shift.

SYMBOLIC LANGUAGE
00 add $r2 $zero $zero
01 lw $zero 16
02 add $r0 $zero $acc
03 lw $zero 17
04 add $r1 $zero $acc
05 add $acc $zero $zero
06 add $acc $acc $r0
07 cmp $conde $acc $r1
08 and $conde $conde $gt
09 bc 3
10 sw $r2 18
11 addi $r2 $r2 1
12 j 6
13 add $acc $zero $shift
14 sw $r2 18
15 halt

MACHINE LANGUAGE
00 0101101000000000 (0x5a00)
01 0001000000010000 (0x1010)
02 0101100000000001 (0x5801)
03 0001000000010001 (0x1011)
04 0101100100000001 (0x5901)
05 0101000100000000 (0x5100)
06 0101000100011000 (0x5118)
07 1100001000011001 (0xc219)
08 1101001000100101 (0xd225)
09 0011000000000011 (0x3003)
10 0010101000010010 (0x2a12)
11 0110101010100001 (0x6aa1)
12 0100000000000110 (0x4006)
13 0101000100000111 (0x5107)
14 0010101000010010 (0x2a12)
15 0000000000000000 (0x0000)

